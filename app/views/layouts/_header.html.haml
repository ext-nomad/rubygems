%nav.navbar.navbar-expand-lg.navbar-dark.purple-background.shadow
  .container
    %a.navbar-brand{:href => "/"}
      = image_tag 'logo.png', size: '30x30', alt: 'logo', alt: "logo", class: 'd-inline-block align-top'
      = t('title.title')
    %button.navbar-toggler{"aria-controls" => "navbarSupportedContent", "aria-expanded" => "false", "aria-label" => "Toggle navigation", "data-target" => "#navbarSupportedContent", "data-toggle" => "collapse", :type => "button"}
      %span.navbar-toggler-icon
    #navbarSupportedContent.collapse.navbar-collapse
      - if current_user
        %ul.navbar-nav.mr-auto
          -# = long_active_link_to(root_path) do
          -#   .fa.fa-home
          -#   = t('.home')

          -# .form-inline
          -#   - if @ransack_courses.present?
          -#     = search_form_for @ransack_courses, as: :courses_search, url: courses_path do |f|
          -#       .input-group
          -#         = f.search_field :title_cont, class: 'form-control-sm', style: 'float: left; width: 150px; ', placeholder: t('placeholders.find'), :autocomplete => :off
          -#         %span.input-group-append
          -#           %button.btn.btn-primary.btn-sm{:type => "submit"}
          -#             %span.fa.fa-search{"aria-hidden" => "true"}

        %ul.navbar-nav.mr-auto
          - if current_user.has_role?(:student)
            %li.nav-item.dropdown
              %a#studentDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                .fa.fa-graduation-cap
                = t('.learn')
              .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "studentDropdown"}
                = dropdown_active_link(courses_path) do
                  .fa.fa-graduation-cap
                  %b= t('.courses')
                = dropdown_active_link(learning_courses_path) do
                  .fa.fa-lock-open
                  %b= t('.purchased')
                  .badge.badge-danger
                    = current_user.enrollments_count
                = dropdown_active_link(pending_review_courses_path) do
                  .fa.fa-star
                  %b= t('.review')
                  .badge.badge-danger
                    = current_user.enrollments.pending_review.count

          - if current_user.has_role?(:teacher)
            %li.nav-item.dropdown
              %a#teacherDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                .fa.fa-chalkboard-teacher
                = t('.teach')
              .dropdown-menu.dropdown-menu-left{"aria-labelledby" => "teacherDropdown"}
                = dropdown_active_link(new_course_path) do
                  .fa.fa-plus
                  %b= t('.new')
                = dropdown_active_link(teaching_courses_path) do
                  .fa.fa-graduation-cap
                  %b= t('.created')
                  .badge.badge-danger
                    = current_user.courses_count
                = dropdown_active_link(my_students_enrollments_path) do
                  .fa.fa-users
                  %b= t('.students')
                  .badge.badge-danger
                    = Enrollment.joins(:course).where(courses: {user: current_user}).count

          - if current_user.has_role?(:admin)
            %li.nav-item.dropdown
              %a#adminDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
                .fa.fa-cog
                = t('.admin')
              .dropdown-menu.dropdown-menu-center{"aria-labelledby" => "adminDropdown"}
                = dropdown_active_link(unapproved_courses_path) do
                  .fa.fa-graduation-cap
                  %b= t('.unapproved')
                  .badge.badge-danger
                    = Course.unapproved.count
                = dropdown_active_link(users_path) do
                  .fa.fa-users
                  %b= t('.users')
                  .badge.badge-danger
                    = User.count
                = dropdown_active_link(enrollments_path) do
                  .fa.fa-lock-open
                  %b= t('.enrollments')
                  .badge.badge-danger
                    = Enrollment.count
                = dropdown_active_link(analytics_path) do
                  .fa.fa-chart-line
                  %b= t('.analytics')
                = dropdown_active_link(activity_path) do
                  .fa.fa-bell
                  %b= t('.activity')
                = dropdown_active_link(tags_path) do
                  .fa.fa-cloud
                  %b= t('.tags')

        %ul.navbar-nav.mr-right
          %li.nav-item.dropdown
            %a#navbarDropdown.nav-link.dropdown-toggle{"aria-expanded" => "false", "aria-haspopup" => "true", "data-toggle" => "dropdown", :href => "#", :role => "button"}
              %b= current_user.email
            .dropdown-menu.dropdown-menu-right{"aria-labelledby" => "navbarDropdown"}
              = dropdown_active_link(edit_user_registration_path) do
                .fa.fa-cog
                %b= t('.settings')
              = link_to destroy_user_session_path, method: :delete, class: "dropdown-item" do
                .fa.fa-sign-out-alt
                %b= t('.out')


      - else
        %ul.navbar-nav.mr-auto

        %ul.navbar-nav.mr-right
          = active_link_to(t('session.register'), new_user_registration_path)
          = active_link_to(t('session.log_in'), new_user_session_path)
          = long_active_link_to(user_google_oauth2_omniauth_authorize_path) do
            .fab.fa-google
          = long_active_link_to(user_github_omniauth_authorize_path) do
            .fab.fa-github
          = long_active_link_to(user_vkontakte_omniauth_authorize_path) do
            .fab.fa-vk

