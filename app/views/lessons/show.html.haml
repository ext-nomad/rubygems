- content_for :title do
  RubyGems
  \/
  Course
  = @course.title
  \/
  Lesson
  = @lesson.title

= link_to 'Courses', courses_path
\/
= link_to @lesson.course.title, course_path(@lesson.course)
\/
= link_to @lesson.title, course_lesson_path(@course, @lesson)
%p

= @lesson.user_lessons.where(user: current_user).first.impressions

.row
  .col-lg-8.order-1.order-lg-1
    = render 'lessons/lesson', lesson: @lesson
    %video(controls='true' poster="#{url_for @lesson.video_thumbnail}" width='100%' preload='metadata')
      %source{src: rails_blob_url(@lesson.video), type:"#{@lesson.video.content_type}" }
    %p

  .col-lg-4.order-0.order-lg-1
    .sticky-top
      %ul.list-group
        %li.list-group-item
        
          = link_to course_path(@lesson.course) do
            .fa.fa-graduation-cap
            = @lesson.course.title
          .float-right
            .fa.fa-spinner
            = number_to_percentage(@course.progress(current_user), precision: 0)  
        - @lessons.each do |lesson|
          - if @lesson.present? && lesson == @lesson
            %li.list-group-item.list-group-item-success
              = render 'lessons/lesson_preview', lesson: lesson
          - else
            %li.list-group-item
              = render 'lessons/lesson_preview', lesson: lesson
    %p
